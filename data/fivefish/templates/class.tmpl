<?import rel_prefix, modsort, files ?>

		<section class="hero-unit">
			<h1 class="[?call klass.type ?]"><?call klass.full_name ?></h1>
		</section>

		<div class="file-metadata">
			<p class="filename">Filename: <code><?call klass.file ?></code></p>
		</div>

		<section class="description">
			<?call klass.description ?>
		</section>

		<?for section, constants, attributes in klass.each_section ?>
		  <!-- <?constants = constants.select { |const| const.display? } ?>
		  <?attributes = attributes.select { |attr| attr.display? } ?> -->
		<section id="<?call section.aref ?>" class="documentation-section">
			<?if section.title ?>
			<header>
				<h2><?call section.title ?></h2>
				<span class="section-click-top">
					<a href="#top">&uarr; top</a>
				</span>
			</header>
			<?end if ?>

		    <?if section.comment ?>
		    <section class="description">
				<?call section.description ?>
		    </section>
		    <?end if ?>

			<?if constants.any?{|c| c.display? } ?>
			<!-- Constants -->
			<section class="constants-list">
				<header>
					<h3>Constants</h3>
				</header>
				<dl>
				<?for const in constants.select {|c| c.display? } ?>
					<dt id="[?call const.name ?]"><?call const.name ?></dt>
					<?if const.comment ?>
					<dd class="description"><?call const.description.strip ?></dd>
					<?else ?>
					<dd class="description missing-docs">(Not documented)</dd>
					<?end ?>
				<?end ?>
				</dl>
			</section>
			<?end ?>

			<?if attributes.any?{|a| a.display? } ?>
			<!-- Attributes -->
			<section class="attributes-list">
				<header>
					<h3>Attributes</h3>
				</header>
				<dl>
				<?for attrib in attributes.select {|a| a.display? } ?>
					<dt id="[?call attrib.aref ?]"><?call attrib.name ?><span
						class="attribute-access-type">[<?call attrib.rw ?>]</span></dt>
					<?if attrib.comment ?>
					<dd class="description"><?call attrib.description.strip ?></dd>
					<?else ?>
					<dd class="description missing-docs">(Not documented)</dd>
					<?end ?>
				<?end ?>
				</dl>
			</section>
			<?end if ?>

			<!-- Methods -->
			<?for type, visibilities in klass.methods_by_type( section ) ?>
			<?for visbility, methods in visibilities ?>

			<?unless methods.empty? ?>
			<section id="<?attr visibility ?>-<?attr type ?>-<?call
				section.aref ?>-method-details" class="method-list">
				<header>
					<h3><?call visibility.to_s.capitalize ?> <?call type.capitalize ?> Methods</h3>
				</header>

				<?for method in methods ?>
				<div id="<?call method.aref ?>" class="method-detail <?call method.is_alias_for ? "method-alias" : '' ?>">
        <?if method.call_seq then ?>
        <?  method.call_seq.strip.split("\n").each_with_index do |call_seq, i| ?>
        <div class="method-heading">
          <span class="method-callseq">
            <?call h(call_seq.strip.
                  gsub( /^\w+\./m, '')).
                  gsub(/(.*)[-=]&gt;/, '\1&rarr;') ?>
          </span>
          <?if i == 0 then ?>
          <span class="method-click-advice">click to toggle source</span>
          <?end ?>
        </div>
        <?  end ?>
        <?else ?>
        <div class="method-heading">
          <span class="method-name"><?call h method.name ?></span><span
            class="method-args"><?call method.param_seq ?></span>
          <span class="method-click-advice">click to toggle source</span>
        </div>
        <?end ?>

        <div class="method-description">
          <?if method.comment then ?>
          <?call method.description.strip ?>
          <?else ?>
          <p class="missing-docs">(Not documented)
          <?end ?>

          <?if method.token_stream then ?>
          <div class="method-source-code" id="<?call method.html_name ?>-source">
            <pre><?call method.markup_code ?></pre>
          </div><!-- <?call method.html_name ?>-source -->
          <?end ?>
        </div>

        <?unless method.aliases.empty? then ?>
        <div class="aliases">
          Also aliased as: <?call method.aliases.map do |aka|
            if aka.parent then # HACK lib/rexml/encodings
              %{<a href="#{klass.aref_to aka.path}">#{h aka.name}</a>}
            else
              h aka.name
            end
          end.join ", " ?>
        </div>
        <?end ?>

        <?if method.is_alias_for then ?>
        <div class="aliases">
          Alias for: <a href="<?call klass.aref_to method.is_alias_for.path ?>"><?call h method.is_alias_for.name ?></a>
        </div>
        <?end ?>
      </div><!-- <?call method.html_name ?>-method -->

    <?end ?>
    </section><!-- <?call visibility ?>-<?call type ?>-method-details -->
  <?end
     end ?>
  </section><!-- <?call section.aref ?> -->
<?end ?>

<pre>
<?pp klass ?>
</pre>